name: 'Commit Message Check'
on:
  
  push:
    branches:
      - main
env: 
  instance_running: "running"
  instance_stopped: "stopped"
jobs:
  function:
    runs-on: ubuntu-latest
    outputs: 
          run_UI_jobs: ${{ steps.frontend.outputs.ui}}
          run_services_jobs: ${{ steps.Backend.outputs.backend }}
          api: ${{ steps.Backend.outputs.api }}
          Auth: ${{ steps.Backend.outputs.Auth }}
          admin: ${{ steps.Backend.outputs.admin }}
          Admin: ${{ steps.Backend.outputs.Admin }}
          angular: ${{ steps.Backend.outputs.angular }}

    steps:
      - uses: actions/checkout@v2
      - name: Check for changes
        id: diff
        run: |
          if [ $GITHUB_BASE_REF ]; then
            git fetch origin $GITHUB_BASE_REF --depth=1
            export FILE_DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
          else
            git fetch origin ${{ github.event.before }} --depth=1
            export FILE_DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          fi
          echo "$FILE_DIFF"
          echo "::set-output name=diff::$( echo "$FILE_DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
      - name: UI to build function
        id: frontend
        run: |
          FILE_DIFF="${{ steps.diff.outputs.diff }}"
          while read path;
          do
            directory="$( echo $path )"
            if [[ $directory != application/clients/desktop/* ]]; then
              echo "::set-output name=ui::notcommited" 
              continue
            else
              echo "::set-output name=ui::commited"
              break
            fi
          done <<< "$FILE_DIFF"
      - name: Services function to build
        if: env.instance_running == 'running'
        id: Backend
        run: |
          FILE_DIFF="${{ steps.diff.outputs.diff }}"
          while read path;
          do
            directory="$( echo $path )"
            if [[ $directory == application/services/apigateway/* ]]; then
              echo "::set-output name=backend::commited"
              echo "::set-output name=api::apigateway" 
              continue
            elif [[ $directory == application/services/Auth-Proxy/* ]]; then
              echo "::set-output name=backend::commited" 
              echo "::set-output name=Auth::Auth-Proxy"
              continue
            elif [[ $directory == application/services/adminmanager/* ]]; then
              echo "::set-output name=backend::commited" 
              echo "::set-output name=admin::adminmanager"
              continue
            elif [[ $directory == generator/services/Admin-manager/* ]]; then
              echo "::set-output name=backend::commited"
              echo "::set-output name=Admin::Admin-manager" 
              continue
            elif [[ $directory == generator/services/angular-gen-manager/* ]]; then
              echo "::set-output name=backend::commited"
              echo "::set-output name=angular::angular-gen-manager" 
              continue
            else
              echo "::set-output name=backend::notcommited"
            fi
          done <<< "$FILE_DIFF"
      # - uses: actions/checkout@v2
      # - uses: EndBug/add-and-commit@v6
      #   with: 
      #     path: './generator/services/configurationmanager/src/assests/'
      #     message: 'Add the version and date'
      #     add: '*.json --force'
      #     cwd: './generator/services/configurationmanager/src/assests/'  
      #     token: ${{ secrets.TOKEN }}
      # - run: |
      #     echo "`jq '.base_config[0].value="Alpha-20"' configuration.json`" > ./generator/services/configurationmanager/src/assests/configuration.json
      #     echo "`jq '.base_config[1].value="1.2.14"' configuration.json`" > ./generator/services/configurationmanager/src/assests/configuration.json
      #     echo "`jq '.base_config[2].value="28/12/2020"' configuration.json`" > ./generator/services/configurationmanager/src/assests/configuration.json
          
  UIfrontend:
    name: UIfrontend
    needs: [function]
    if: needs.function.outputs.run_UI_jobs == 'commited'
    runs-on: ubuntu-latest
    steps:
      - name: the rest jobs
        run: echo ${{ needs.function.outputs.run_UI_jobs }}
  services:
    name: Services
    needs: [function]
    if: needs.function.outputs.run_services_jobs == 'commited'
    runs-on: ubuntu-latest
    steps:
      - name: the rest jobs
        run: |
          echo "docker-compose rm -rf ${{ needs.function.outputs.api }}"
          echo "docker-compose rm -rf ${{ needs.function.outputs.admin }}"
          echo "docker-compose rm -rf ${{ needs.function.outputs.Auth }}"
          echo "docker-compose rm -rf ${{ needs.function.outputs.Admin }}"
          echo "docker-compose rm -rf ${{ needs.function.outputs.angular }}"
           